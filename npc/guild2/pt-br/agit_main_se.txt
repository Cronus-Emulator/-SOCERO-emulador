//===== rAthena Script =======================================
//= War of Emperium SE - Template File
//===== By: ==================================================
//= Euphy
//===== Current Version: =====================================
//= 1.4a
//===== Compatible With: =====================================
//= rAthena Project
//===== Description: =========================================
//= Like agit_main, this file is required
//= for SE castles to function.
//===== Additional Comments: =================================
//= 0.x Previous authors: L0ne_W0lf, Zephyrus, Brian.
//= 1.0 If anything breaks, blame Maki. [Euphy]
//= 1.1 Fixed an incorrect label execution. [Euphy]
//= 1.2 Hopefully fixed a processing error. [Euphy]
//= 1.3 Fixed barricade issue in schg_cas02. [Cookie]
//= 1.4 Added OnGuildBreak event and a spawn check. [Euphy]
//= 1.4a Fixed Guardian Stone respawns. [Euphy]
//============================================================
// traduzido e revisado por Haikenz

// Core, triggers all other events
//============================================================
-	script	Manager#template	-1,{
OnAgitInit2:
OnRecvCastle2:
	if (strnpcinfo(2) == "template") end;
	if (!getcastledata(strnpcinfo(2),CD_GUILD_ID)) {
		donpcevent strnpcinfo(0)+"::OnStart";
		// Monster spawns are identical for all castles.
		monster strnpcinfo(2),0,0,"Druída Maligno",1117,10;
		monster strnpcinfo(2),0,0,"Khalitzburg",1132,4;
		monster strnpcinfo(2),0,0,"Cavaleiro do Abismo",1219,3;
		monster strnpcinfo(2),0,0,"Executor",1205,1;
		monster strnpcinfo(2),0,0,"Penomena",1216,10;
		monster strnpcinfo(2),0,0,"Alarme",1193,18;
		monster strnpcinfo(2),0,0,"Relógico",1269,9;
		monster strnpcinfo(2),0,0,"Raydric Arqueiro",1276,12;
		monster strnpcinfo(2),0,0,"Andarilho",1208,3;
		monster strnpcinfo(2),0,0,"Alice",1275,1;
		monster strnpcinfo(2),0,0,"Cavaleiro Sanguinário",1268,2;
		monster strnpcinfo(2),0,0,"Senhor das Trevas",1272,2;
		monster strnpcinfo(2),0,0,"Gerente",1270,4;
	}
	if (getcastledata(strnpcinfo(2),CD_ENABLED_KAFRA) < 1)
		disablenpc "Funcionária Kafra#"+substr(strnpcinfo(2),0,1)+substr(strnpcinfo(2),8,9);
	end;

OnAgitStart2:
	if (strnpcinfo(2) == "template") end;
	if (agitcheck2()) {
		maprespawnguildid strnpcinfo(2),getcastledata(strnpcinfo(2),CD_GUILD_ID),2;
		gvgon strnpcinfo(2);
		donpcevent strnpcinfo(0)+"::OnStart";
	}
	else for(set .@i,0; .@i<4; set .@i,.@i+1)
		donpcevent "RL"+.@i+"#"+strnpcinfo(2)+"::OnDisable";
	end;

OnAgitEnd2:
	if (strnpcinfo(2) == "template") end;
	gvgoff strnpcinfo(2);
	if (getcastledata(strnpcinfo(2),CD_GUILD_ID)) {
		set .@str$,substr(strnpcinfo(2),0,1)+substr(strnpcinfo(2),8,9);
		killmonster strnpcinfo(2),"Mordomo#"+.@str$+"::OnStartArena";
		donpcevent strnpcinfo(0)+"::OnReset";
		donpcevent "Mordomo#"+.@str$+"::OnStop";
	}
	end;

OnGuildBreak:
	if (strnpcinfo(2) == "template") end;
	killmonster strnpcinfo(2),"gard1#"+strnpcinfo(2)+"::OnGuardianDied";
	killmonster strnpcinfo(2),"gard2#"+strnpcinfo(2)+"::OnGuardianDied";
	disablenpc "Funcionária Kafra#"+substr(strnpcinfo(2),0,1)+substr(strnpcinfo(2),8,9);
	setcastledata strnpcinfo(2),CD_GUILD_ID,0;
	sleep 7000;
	announce "A Base do Clã ["+getcastlename(strnpcinfo(2))+"] foi abandonada.",0;
	donpcevent strnpcinfo(0)+"::OnRecvCastle2";
	end;

OnStart:
	// $agit_ar0x[] - $agit_sc0x[]
	// 1st Guardian stone, 2nd Guardian stone, Barrier 1, Barrier 2, Barrier 3, Summon Guardians
	// Settings for all but Summon Guardians: 0 = Okay | 1 = Destroyed | 2 = Repairing
	// Summon Guardians: 0 = Do not Summon | 1 = Summon
	if (getcastledata(strnpcinfo(2),CD_GUILD_ID)) {
		setarray getd("$agit_"+substr(strnpcinfo(2),0,1)+substr(strnpcinfo(2),8,9)+"[0]"),0,0,0,0,0,0;
		donpcevent "df1#"+strnpcinfo(2)+"::OnEnable";
		donpcevent "df2#"+strnpcinfo(2)+"::OnEnable";
		for(set .@i,0; .@i<4; set .@i,.@i+1)
			donpcevent "RL"+.@i+"#"+strnpcinfo(2)+"::OnEnable";
	}

OnEmpSpawn:
	set .@str$, substr(strnpcinfo(2),0,1)+substr(strnpcinfo(2),8,9);
	if (mobcount(strnpcinfo(2),"Mordomo#"+.@str$+"::OnStartArena")) end;
	if (compare(strnpcinfo(2),"arug")) {
		if (strnpcinfo(2) == "arug_cas01") setarray .@i[0],87,219;
		else if (strnpcinfo(2) == "arug_cas02") setarray .@i[0],89,256;
		else setarray .@i[0],141,293;	// Castles 3,4,5 are identical.
	}
	else {
		if (strnpcinfo(2) == "schg_cas02") setarray .@i[0],162,193;
		else if (strnpcinfo(2) == "schg_cas03") setarray .@i[0],338,202;
		else setarray .@i[0],120,272;	// Castles 1,4,5 are identical.
	}
	monster strnpcinfo(2),.@i[0],.@i[1],"Emperium",1288,1,"Mordomo#"+.@str$+"::OnStartArena";
	end;

OnReset:
	set .@str$, substr(strnpcinfo(2),0,1)+substr(strnpcinfo(2),8,9);
	donpcevent "df1#"+strnpcinfo(2)+"::OnDisable";
	donpcevent "df2#"+strnpcinfo(2)+"::OnDisable";
	donpcevent "gard1#"+strnpcinfo(2)+"::OnReset";
	donpcevent "gard2#"+strnpcinfo(2)+"::OnReset";
	donpcevent "1ª Runa Guardiã#"+.@str$+"::OnDisable";
	donpcevent "2ª Runa Guardiã#"+.@str$+"::OnDisable";
	for(set .@i,1; .@i<4; set .@i,.@i+1)
		donpcevent "Dispositivo de Controle0"+.@i+"#"+.@str$+"::OnDisable";
	for(set .@i,0; .@i<4; set .@i,.@i+1)
		donpcevent "RL"+.@i+"#"+strnpcinfo(2)+"::OnDisable";
	if (agitcheck2())
		setarray getd("$agit_"+substr(strnpcinfo(2),0,1)+substr(strnpcinfo(2),8,9)+"[0]"),0,0,1,1,1,0;
	end;

OnChange:
	set .@str$, substr(strnpcinfo(2),0,1)+substr(strnpcinfo(2),8,9);
	setarray getd("$agit_"+.@str$+"[0]"),2,2,1,1,2,0;
	donpcevent strnpcinfo(0)+"::OnEmpSpawn";
	donpcevent "Dispositivo de Controle03#"+.@str$+"::OnEnable";
	donpcevent "1ª Runa Guardiã#"+.@str$+"::OnEnable";
	donpcevent "2ª Runa Guardiã#"+.@str$+"::OnEnable";
	end;

OnClock0001:
	// Spawn Treasure Chests based on castle economy.
	if (strnpcinfo(2) == "template") end;
	if (!getcastledata(strnpcinfo(2),CD_GUILD_ID)) end;
	killmonster strnpcinfo(2),strnpcinfo(0)+"::OnTreasureDied";
	if (getcastledata(strnpcinfo(2),CD_INVESTED_ECONOMY)) {
		set .@Economy,getcastledata(strnpcinfo(2),CD_CURRENT_ECONOMY);
		setcastledata strnpcinfo(2),CD_CURRENT_ECONOMY,.@Economy+getcastledata(strnpcinfo(2),CD_INVESTED_ECONOMY)+(rand(2) && getgdskilllv(getcastledata(strnpcinfo(2),CD_GUILD_ID),10014));
		if (getcastledata(strnpcinfo(2),CD_CURRENT_ECONOMY) > 100) setcastledata strnpcinfo(2),CD_CURRENT_ECONOMY,100;
		setcastledata strnpcinfo(2),CD_INVESTED_ECONOMY,0;
	}
	if (getcastledata(strnpcinfo(2),CD_INVESTED_DEFENSE)) {
		set .@Defence,getcastledata(strnpcinfo(2),CD_CURRENT_DEFENSE);
		setcastledata strnpcinfo(2),CD_CURRENT_DEFENSE,.@Defence+getcastledata(strnpcinfo(2),CD_INVESTED_DEFENSE);
		if (getcastledata(strnpcinfo(2),CD_CURRENT_DEFENSE) > 100) setcastledata strnpcinfo(2),CD_CURRENT_DEFENSE,100;
		setcastledata strnpcinfo(2),CD_INVESTED_DEFENSE,0;
	}
	set .@Treasure,getcastledata(strnpcinfo(2),CD_CURRENT_ECONOMY)/5+4;
	if (!.@Treasure) end;
	freeloop(1);
	if (compare(strnpcinfo(2),"arug")) {
		if (strnpcinfo(2) == "arug_cas01") {
			set .@treasurebox,1943;
			setarray .@treasurex[0],251,252,253,254,255,256,257,258,251,252,253,254,255,256,257,258,251,252,253,254,255,256,257,258;
			setarray .@treasurey[0],369,369,369,369,368,368,368,368,367,367,367,367,366,366,366,366,365,365,365,365,364,364,364,364;
		}
		else if (strnpcinfo(2) == "arug_cas02") {
			set .@treasurebox,1944;
			setarray .@treasurex[0],382,383,384,385,386,387,384,385,386,387,388,389,382,383,384,385,386,387,384,385,386,387,388,389;
			setarray .@treasurey[0],231,231,231,231,231,231,230,230,230,230,230,230,225,225,225,225,225,225,224,224,224,224,224,224;
		}
		else { 	// Castles 3,4,5 are identical, except 4's treasure.
			set .@treasurebox,(strnpcinfo(2) == "arug_cas04")?1946:1945;
			setarray .@treasurex[0],291,292,293,294,295,296,293,294,295,296,297,298,291,292,293,294,295,296,293,294,295,296,297,298;
			setarray .@treasurey[0],276,276,276,276,276,276,274,274,274,274,274,274,272,272,272,272,272,272,269,269,269,269,269,269;
		}
	}
	else {
		if (strnpcinfo(2) == "schg_cas02") {
			set .@treasurebox,1939;
			setarray .@treasurex[0],249,250,251,252,253,246,247,248,249,250,250,251,252,253,246,247,248,249,250,249,250,251,252,253;
			setarray .@treasurey[0],378,378,378,378,378,376,376,376,376,376,374,374,374,374,372,372,372,372,372,370,370,370,370,370;
		}
		else if (strnpcinfo(2) == "schg_cas03") {
			set .@treasurebox,1940;
			setarray .@treasurex[0],189,190,191,192,193,194,189,190,191,192,193,194,189,190,191,192,193,194,189,190,191,192,193,194;
			setarray .@treasurey[0], 21, 21, 21, 21, 21, 21, 19, 19, 19, 19, 19, 19, 17, 17, 17, 17, 17, 17, 15, 15, 15, 15, 15, 15;
		}
		else {	// Castles 1,4,5 are identical, except treasures.
			if (strnpcinfo(2) == "schg_cas01") set .@treasurebox,1938;
			else if (strnpcinfo(2) == "schg_cas04") set .@treasurebox,1941;
			else set .@treasurebox,1942;
			setarray .@treasurex[0],388,388,388,387,386,385,384,384,384,384,384,384,385,386,387,388,389,390,390,390,389,388,387,386;
			setarray .@treasurey[0],388,389,390,390,390,390,389,388,387,386,385,384,384,384,384,384,384,384,385,386,386,386,386,386;
		}
	}
	for(set .@i,0; .@i<4; set .@i,.@i+1)
		monster strnpcinfo(2),.@treasurex[.@i],.@treasurey[.@i],"Treasure Chest",(.@i%2)?.@treasurebox:1324,1,strnpcinfo(0)+"::OnTreasureDied";
	for(set .@i,4; .@i<24; set .@i,.@i+1) {
		if (.@Treasure < .@i+1) break;
		monster strnpcinfo(2),.@treasurex[.@i],.@treasurey[.@i],"Treasure Chest",(.@i%2)?.@treasurebox:1324,1,strnpcinfo(0)+"::OnTreasureDied";
	}
	freeloop(0);
	end;

OnTreasureDied:
	end;
}

// Guild Manager
//============================================================
-	script	Mordomo#template	-1,{
	set .@GID, getcastledata(strnpcinfo(4),CD_GUILD_ID);
	if (!.@GID) {
		mes "[ Mordomo ]";
		mes "Estou aguardando pelo mestre";
		mes "que irá escolher o destino";
		mes "através de mim. Você acha que";
		mes "tem a coragem e a força";
		mes "para conquistar esse castelo?";
		close;
	}
	if (is_guild_leader(.@GID) == false) {
		mes "[ Mordomo ]";
		mes "Hum. Suas ameaças não";
		mes "me assustam! Guardiões, levem";
		mes "este infiel para fora daqui!";
		mes "Serei sempre fiel ao";
		mes "mestre deste castelo,";
		mes "o primeiro e único ^FF0000"+getguildmaster(.@GID)+"^000000.";
		close;
	}
	mes "[ Mordomo ]";
	mes "Ah, Mestre ^FF0000"+getguildmaster(.@GID)+"^000000...";
	mes "Como poderei servi-lo hoje?";
	mes "Havia um aspecto de";
	mes "manutenção no castelo,";
	mes "você queria discutir?";
	next;
	switch(select("Informações do Castelo:Investir no crescimento Comercial:Investir no crescimento da Defesa:Contratar/Despedir Equipe de Armazém:Ir para a sala do Mestre")) {
	case 1:
		mes "[ Mordomo ]";
		mes "O Nível de crescimento comercial";
		mes "do castelo é ^0000ff"+getcastledata(strnpcinfo(4),CD_CURRENT_ECONOMY)+".";
		if (getcastledata(strnpcinfo(4),CD_INVESTED_ECONOMY) > 0) {
			mes "Da última vez, você investiu no";
			mes "Crescimento comercial "+getcastledata(strnpcinfo(4),CD_INVESTED_ECONOMY)+".";
		}
		next;
		mes "[ Mordomo ]";
		mes "Nosso castelo";
		mes "possui o Nível de segurança "+getcastledata(strnpcinfo(4),CD_CURRENT_DEFENSE)+".";
		if (getcastledata(strnpcinfo(4),CD_INVESTED_DEFENSE) > 0) {
			mes "Da última vez, você investiu";
			mes ""+getcastledata(strnpcinfo(4),CD_INVESTED_DEFENSE)+" vezes na defesa.";
		}
		mes " ";
		mes "Tudo isso, mestre.";
		close;
	case 2:
		set .@Economy,getcastledata(strnpcinfo(4),CD_CURRENT_ECONOMY);
		setarray .@cost[0],5000,10000,20000,35000,55000,80000,110000,145000,185000,230000,280000,335000,395000,460000,530000,605000,685000,770000,860000,955000;
		set .@j,0;
		for(set .@i,6; .@i<101; set .@i,.@i+5) {
			if (.@Economy < .@i) {
				set .@eco_invest,.@cost[.@j];
				break;
			}
			set .@j, .@j+1;
		}
		// Quadruple the cost of investing if you've already invested once.
		if (getcastledata(strnpcinfo(4),CD_INVESTED_ECONOMY)) set .@eco_invest,.@eco_invest*4;
		mes "[ Mordomo ]";
		mes "Aumentar o crescimento";
		mes "comercial do castelo";
		mes "aumenta a quantidade de";
		mes "bens produzidos para a guilda.";
		mes "Investir no crescimento comercial";
		mes "irá ajudar o futuro da sua guilda.";
		next;
		mes "[ Mordomo ]";
		mes "Você pode fazer um investimento";
		mes "por dia, mas se você fizer";
		mes "dois investimentos e pagar";
		mes "mais zenys: isso irá acelerar";
		mes "o desenvolvimento comercial,";
		mes "mas isso pode ser muito caro.";
		next;
		if (.@Economy == 100) {
			mes "[ Mordomo ]";
			mes "No entando, o nosso nível";
			mes "de crescimento comercial está em";
			mes "100%. Não é possível";
			mes "desenvolver o crescimento comercial";
			mes "mais do que isso.";
			close;
		}
		if (getcastledata(strnpcinfo(4),CD_INVESTED_ECONOMY) >= 2) {
			mes "[ Mordomo ]";
			mes "Você já fez dois";
			mes "investimentos hoje, então você";
			mes "terá que esperar";
			mes "para fazer outro investimento.";
			close;
		}
		if (getcastledata(strnpcinfo(4),CD_INVESTED_ECONOMY) == 0) {
			mes "[ Mordomo ]";
			mes "Você deve pagar ^FF0000"+.@eco_invest+"^000000 zenys";
			mes "para fazer um investimento.";
			mes "Você deseja investir no crescimento comercial";
			mes "deste castelo agora ?";
		}
		else {
			mes "[ Mordomo ]";
			mes "Você deve pagar ^FF0000"+.@eco_invest+"^000000";
			mes "mais zenys para fazer um outro";
			mes "investimento hoje. Será que você";
			mes "quer investir outra vez?";
		}
		next;
		switch(select("Investir no crescimento Comercial:Cancelar")) {
		case 1:
			if (getcastledata(strnpcinfo(4),CD_INVESTED_ECONOMY) >= 2) {
				mes "[ Mordomo ]";
				mes "Você já fez dois";
				mes "investimentos hoje, então você";
				mes "tem que esperar até amanhã";
				mes "para fazer outro investimento.";
				close;
			}
			if (Zeny < .@eco_invest) {
				mes "[ Mordomo ]";
				mes "Sinto muito, Mestre, mas";
				mes "você não possui";
				mes "zenys para investir no seu Clã";
				mes "hoje.";
				close;
			}
			set Zeny, Zeny-.@eco_invest;
			setcastledata strnpcinfo(4),CD_INVESTED_ECONOMY,getcastledata(strnpcinfo(4),CD_INVESTED_ECONOMY)+1;
			mes "[ Mordomo ]";
			mes "Um sábio uso da Guild";
			mes "fundos, mestre. Podemos esperar";
			mes "para ver os resultados deste";
			mes "investimento até amanhã.";
			close;
		case 2:
			mes "[ Mordomo ]";
			mes "Ao seu comando Mestre.";
			close;
		}
	case 3:
		set .@Defence,getcastledata(strnpcinfo(4),CD_CURRENT_DEFENSE);
		setarray .@cost[0],10000,20000,40000,70000,110000,160000,220000,290000,370000,460000,560000,670000,790000,920000,1060000,1210000,1370000,1540000,1720000,1910000;
		set .@j,0;
		for(set .@i,6; .@i<101; set .@i,.@i+5) {
			if (.@Defence < .@i) {
				set .@def_invest,.@cost[.@j];
				break;
			}
			set .@j, .@j+1;
		}
		// Quadruple the cost of investing if you've already invested once.
		if (getcastledata(strnpcinfo(4),CD_INVESTED_DEFENSE)) set .@def_invest,.@def_invest*4;
		mes "[ Mordomo ]";
		mes "Investir na defesa do castelo";
		mes "irá aumentar a";
		mes "durabilidade dos nossos Guardiões";
		mes "e do Emperium. Precisaremos";
		mes "de todas as vantagens para nos proteger";
		mes "de nossos inimigos.";
		next;
		mes "[ Mordomo ]";
		mes "Você pode investir em defesa";
		mes "uma vez por dia, mas se você pagar";
		mes "mais zenys, você pode investir";
		mes "no máximo duas vezes por dia.";
		next;
		mes "[ Mordomo ]";
		if (getcastledata(strnpcinfo(4),CD_CURRENT_DEFENSE) == 100) {
			mes "O nível de defesa do";
			mes "do castelo está em 100%, e";
			mes "não pode ser aumentado mais do que isso.";
			close;
		}
		if (getcastledata(strnpcinfo(4),CD_INVESTED_DEFENSE) >= 2) {
			mes "Mestre, você já";
			mes "investiu duas vezes";
			mes "hoje. Você terá que esperar";
			mes "até amanhã se realmente";
			mes "deseja aumentar nossas defesas.";
			close;
		}
		if (getcastledata(strnpcinfo(4),CD_INVESTED_DEFENSE) == 0) {
			mes "É necessário ^FF0000"+.@def_invest+"^000000";
			mes "zeny para investir no";
			mes "fortalecimento das defesas.";
			mes "Você deseja investir agora?";
		}
		else {
			mes "É necessário ^FF0000"+.@def_invest+"^000000";
			mes "zeny para investir no";
			mes "fortalecimento das defesas.";
			mes "Você deseja investir agora?";
		}
		next;
		switch(select("Investir na Defesa:Cancelar")) {
		case 1:
			if (getcastledata(strnpcinfo(4),5) >= 2) {
				mes "[ Mordomo ]";
				mes "Mestre, você já";
				mes "investiu duas vezes";
				mes "hoje. Você terá que esperar";
				mes "até amanhã se realmente";
				mes "deseja aumentar nossas defesas.";
				close;
			}
			if (Zeny < .@def_invest) {
				mes "[ Mordomo ]";
				mes "Me desculpe, Mestre, mas";
				mes "você não possui zenys";
				mes "suficientes para investir";
				mes "na Clã hoje.";
				close;
			}
			set Zeny, Zeny-.@def_invest;
			setcastledata strnpcinfo(4),CD_INVESTED_DEFENSE,getcastledata(strnpcinfo(4),CD_INVESTED_DEFENSE)+1;
			mes "[ Mordomo ]";
			mes "Use sabiamente os fundos do";
			mes "clã, Mestre. Aumentar";
			mes "a frequência de tesouros";
			mes "procurados pelo Clã irá";
			mes "certamente ajudar a todos.";
			close;
		case 2:
			mes "[ Mordomo ]";
			mes "Ao seu comando, Mestre.";
			close;
		}
	case 4:
		if (getcastledata(strnpcinfo(4),CD_ENABLED_KAFRA) == 1) {
			mes "Você deseja demitir";
			mes "a empregada Kafra";
			mes "que foi contratada pelo Clã?";
			next;
			switch(select("Demitir:Cancelar")) {
			case 1:
				cutin "kafra_01",2;
				mes "[ Funcionária Kafra Demitida ]";
				mes "Mestre, por favor reconsidere!";
				mes "Eu tenho trabalhado muito duro";
				mes "para o sucesso do Clã!";
				mes "Irei tentar servir melhor os";
				mes "membros do clã deste";
				mes "castelo, eu prometo!";
				next;
				switch(select("Demitir:Cancel")) {
				case 1:
					mes "[ Funcionária Kafra Demitida ]";
					mes "Por que? O que eu fiz";
					mes "para merecer isso? Waaah~!";
					next;
					cutin "kafra_01",255;
					break;
				case 2:
					mes "[ Funcionária Kafra Demitida ]";
					mes "Obrigado, Mestre!";
					mes "Eu vou obedecer todos os seus";
					mes "comandos, darei o meu melhor!";
					mes "Você não vai se arrepender!";
					close;
				}
				break;
			case 2:
				mes "[ Mordomo ]";
				mes "Ela trabalha muito duro,";
				mes "na minha opinião. Foram";
				mes "todos os nossos melhores interesses";
				mes "que permitiram que ela ficasse conosco.";
				close;
			}
			disablenpc "Funcionária Kafra#"+strnpcinfo(2);
			setcastledata strnpcinfo(4),CD_ENABLED_KAFRA,0;
			mes "[ Mordomo ]";
			mes "A Funcionária Kafra";
			mes "foi demitida.";
			mes "Ficaram realmente instisfeitos";
			mes "com a qualidade do serviço?";
			close;
		}
		else {
			mes "[ Mordomo ]";
			mes "Você quer contratar uma";
			mes "Empregada Kafra para servir";
			mes "o seu castelo? VocÊ deve";
			mes "pagar ^FF000010,000 zeny^000000 para contratar uma.";
			next;
			switch(select("Contratar:Cancelar")) {
			case 1:
				if (getgdskilllv(.@GID,10001) == 0) {
					mes "[ Mordomo ]";
					mes "Mestre, é impossível contratar uma";
					mes "Empregada Kafra porquê";
					mes "você ainda não possui";
					mes "a habilidade de guilda ^FF0000Contrato com a Kafra^000000";
					close;
				}
				if (Zeny < 10000) {
					mes "[ Mordomo ]";
					mes "Mestre, é impossível contratar uma";
					mes "Empregada Kafra porquê";
					mes "você ainda não possui";
					mes "a habilidade de guilda ^FF0000Contrato com a Kafra^000000";
					close;
				}
				set Zeny, Zeny-10000;
				enablenpc "Funcionária Kafra#"+strnpcinfo(2);
				setcastledata strnpcinfo(4),CD_ENABLED_KAFRA,1;
				mes "[ Mordomo ]";
				mes "Muito bem. Nós formamos";
				mes "um contrato com a Kafra";
				mes "Chefe, e contratamos";
				mes "uma Empregada Kafra para seu";
				mes "castelo. Aqui está ela~";
				next;
				cutin "kafra_01",2;
				mes "[ Funcionária Kafra Contratada ]";
				mes "Como vai? Eu";
				mes "fui designada pela";
				mes "Agência Kafra para";
				mes "servir as necessidades da sua guilda.";
				mes "Eu vou dar o meu melhor para seguir";
				mes "todos os seus comandos, Mestre.";
				next;
				cutin "kafra_01",255;
				mes "[ Mordomo ]";
				mes "Seu contrato irá expirar";
				mes "depois de um mês, por isso temos que";
				mes "pagar taxas adicionais para manter";
				mes "esta Empregada Kafra no";
				mes "serviço da sua guilda.";
				close;
			case 2:
				mes "[ Mordomo ]";
				mes "Ao seu comando Mestre.";
				mes "No entanto, sugiro a contratação de";
				mes "um Funcionário Kafra assim";
				mes "que possível, pois nossa guilda";
				mes "beneficiou muito";
				mes "os serviços convenientes Kafra.";
				close;
			}
		}
	case 5:
		mes "[ Mordomo ]";
		mes "Deseja entrar na";
		mes "Sala do Tesouro da Guilda?";
		mes "Só você, Mestre da Guilda,";
		mes "está permitido para entrar.";
		next;
		mes "[ Mordomo ]";
		mes "Por favor, lembre-se de abrir";
		mes "as Caixas do Tesouro no";
		mes "tempo apropriado. Caso contrário, o";
		mes "tesouro pode desaparecer se";
		mes "algo inesperado acontecer.";
		next;
		switch(select("Ir para a Sala do Tesouro:Cancelar")) {
		case 1:
			mes "[ Mordomo ]";
			mes "Permitam-me a guiá-lo";
			mes "no caminho secreto para";
			mes "a Sala do Tesouro.";
			mes "Pressione o dispositivo secreto";
			mes "quando você quiser voltar aqui.";
			close2;
			if (compare(strnpcinfo(4),"arug")) {
				if (strnpcinfo(4) == "arug_cas01") setarray .@i[0],250,363;
				else if (strnpcinfo(4) == "arug_cas02") setarray .@i[0],382,227;
				else setarray .@i[0],292,266;	// Castles 3,4,5 are identical.
			}
			else {
				if (strnpcinfo(4) == "schg_cas02") setarray .@i[0],249,373;
				else if (strnpcinfo(4) == "schg_cas03") setarray .@i[0],190,16;
				else setarray .@i[0],381,381;	// Castles 1,4,5 are identical.
			}
			warp strnpcinfo(4),.@i[0],.@i[1];
			end;
		case 2:
			mes "[ Mordomo ]";
			mes "Itens da Sala do Tesouro";
			mes "são produzidos uma vez a cada dia.";
			mes "Portanto, você deve receber";
			mes "os itens do tesouro diáriamente.";
			mes "Pelo o bem da guilda,";
			mes "priorize a recolha tesouro!";
			close;
		}
	}

OnStop:
	awake strnpcinfo(0);
	end;

OnStartArena:
	set .@GID,getcharid(2);
	set .@region$, (compare(strnpcinfo(4),"arug"))?"Valfreyja":"Nithafjoll";
	// Lower castle Economy
	set .@Economy,getcastledata(strnpcinfo(4),CD_CURRENT_ECONOMY)-5;
	if (.@Economy < 0) set .@Economy, 0;
	setcastledata strnpcinfo(4),CD_CURRENT_ECONOMY,.@Economy;
	// Lower Castle Defence
	set .@Defence,getcastledata(strnpcinfo(4),CD_CURRENT_DEFENSE)-5;
	if (.@Defence < 0) set .@Defence, 0;
	setcastledata strnpcinfo(4),CD_CURRENT_DEFENSE,.@Defence;
	// Set new owner
	setcastledata strnpcinfo(4),CD_GUILD_ID,.@GID;
	// Clear castle's data.
	for(set .@i,CD_INVESTED_ECONOMY; .@i<CD_ENABLED_GUARDIAN00; set .@i,.@i+1)
		setcastledata strnpcinfo(4),.@i,0;
	// Disable Kafra
	disablenpc "Funcionária Kafra#"+strnpcinfo(2);

	announce "O clã ["+getguildname(.@GID)+"] conquistou no feudo ["+.@region$+" "+charat(strnpcinfo(2),3)+"] o castelo de "+getcastlename(strnpcinfo(4))+"!",bc_all|bc_woe;
	mapannounce strnpcinfo(4),"O emperium foi destruído!",bc_map,"0x00FF00",FW_NORMAL,20,0,40;
	donpcevent "Manager#"+strnpcinfo(4)+"::OnReset";
	maprespawnguildid strnpcinfo(4),getcastledata(strnpcinfo(4),CD_GUILD_ID),2;
	donpcevent "Manager#"+strnpcinfo(4)+"::OnRecvCastle2";
	donpcevent "::OnRecvCastle"+strnpcinfo(2);
	sleep 10000;
	if (agitcheck2()) {
		donpcevent "Manager#"+strnpcinfo(4)+"::OnChange";
		mapannounce strnpcinfo(4),"Reconstrua as Runas Guardiãs e os Portões do Castelo para garantir a nova posse do castelo!",bc_map,"0x00FF00",FW_NORMAL,20,0,40;
	}
	end;
}

// Castle Guardians
//============================================================
-	script	Guardião#template	-1,{
	set .@GID, getcastledata(strnpcinfo(4),CD_GUILD_ID);
	set .@n$, "["+strnpcinfo(1)+"]";
	if (!.@GID) {
		mes .@n$;
		mes "Bom trabalho. Agora, tudo o que você";
		mes "precisa fazer é destruir esse";
		mes "Emperium para ganhar a posse";
		mes "deste castelo.";
		close;
	}
	if (getcharid(2) == .@GID) {
		if (is_guild_leader() == false) {
			mes .@n$;
			mes "Como guardião do";
			mes "castelo, eu respondo apenas";
			mes "ao líder do clã que";
			mes "controla este lugar.";
			close;
		}
		else {
			if (!agitcheck2()) {
				mes .@n$;
				mes "Eu sou "+strnpcinfo(1)+", guardião deste";
				mes "castelo. Atualmente,";
				mes "tudo está calmo por aqui.";
				next;
				switch(select("Conversar:Cancelar")) {
				case 1:
					mes .@n$;
					mes "Você tem dúvidas";
					mes "sobre este castelo?";
					next;
					switch(select("Runas Guardiãs:Portões da Fortaleza:Bandeiras de Acesso:Estratégia de Batalha:Cancelar")) {
					case 1:
						mes .@n$;
						mes "Existe um Emperium";
						mes "e duas Runas Guardiãs";
						mes "em cada fortaleza. Essas pedras";
						mes "são a primeira linha de defesa,";
						mes "e devem ser destruídas antes";
						mes "que o inimigo possa entrar.";
						next;
						mes .@n$;
						mes "As runas estão localizadas nas";
						mes "^4D4DFFCasas de Portão^000000 o qual deve ser";
						mes "protegido para previnir inimigos";
						mes "de alcançar o Emperium.";
						mes "Runas Guardiãs podem ^4D4DFFConvocar";
						mes "seus Guardiãos^000000 para proteção.";
						next;
						mes .@n$;
						mes "Fortalezas com níveis mais elevados";
						mes "de defesa podem invocar mais";
						mes "Guardiãos: é por isso que é";
						mes "importante para os Clãs";
						mes "investir no Crescimento da Defesa.";
						next;
						mes .@n$;
						mes "Runas Guardiãs quando";
						mes "destruídas podem reviver";
						mes "depois de um certo tempo, mas um dos^FFFFFF ^000000 membros do clã deve me dar";
						mes "a ordem. Eu também posso denunciar^FFFFFF ^000000 o status da Runa Guardiã.";
						close;
					case 2:
						mes .@n$;
						mes "^4D4DFFPortões da Fortaleza^000000 são a segunda ^FFFFFF ^000000 linha de defesa adotada por um clã,";
						mes "e são protegidos por barricadas extras ativadas pela Runa Guardiã.";
						mes "Estes portões estão localizados em três partes diferentes da fortaleza.";
						next;
						mes .@n$;
						mes "Barricadas são protegidas por";
						mes "Runas Guardiãs, e são";
						mes "restauradas quando a Runa Guardiã";
						mes "é recuperada. Contudo,";
						mes "ela não é tão fácil de se restaurar.";
						next;
						mes .@n$;
						mes "Os Portões da Fortaleza podem ser";
						mes "restaurados quando o ^4D4DFFLíder";
						mes "do Clã de uma fortaleza";
						mes "muda^000000, ou se a ^4D4DFFRestauração";
						mes "é requisitada pelo líder do";
						mes "clã dono do castelo^000000.";
						close;
					case 3:
						mes .@n$;
						mes "Fortalezas têm muitas";
						mes "Bandeiras de Acesso que permitem que você";
						mes "acesse áreas vitais com";
						mes "restrições a áreas que contenham";
						mes "Barricadas. Geralmente, ^4D4DFF1 Bandeira";
						mes "de acesso para cada Portão.^000000.";
						next;
						mes .@n$;
						mes "Muitas bandeiras dão acesso direto";
						mes "a bandeira próxima do Emperium.";
						mes "A bandeira final numerada é";
						mes "ligada à conveniência";
						mes "facilitando a locomoção aos donos do";
						mes "castelo. Tenha isso em mente.";
						close;
					case 4:
						mes .@n$;
						mes "Estratégia? Seria preferível";
						mes "você desenvolver o seu plano de batalha";
						mes "explorando as vantagens da sua guilda";
						mes "e a fraqueza dos seus inimigos.";
						mes "Use the Gate Houses and Barricades, and rebuild as quickly as you can!";
						close;
					case 5:
						mes .@n$;
						mes "Você não tem algo para";
						mes "me perguntar? Bem, eu";
						mes "estou aqui para servias as suas necessidades.";
						close;
					}
				case 2:
					mes .@n$;
					mes "Eu estou sempre aqui,";
					mes "sinta-se livre para pedir a minha";
					mes "ajuda sempre que";
					mes "você precisar.";
					close;
				}
			}
			else {
				mes .@n$;
				mes "Saudações, "+strcharinfo(0)+".";
				mes "Quais são as ordens?";
				next;
				switch(select("Aumentar o poder de defesa:Perspectiva da situação:Cancelar")) {
				case 1:
					if (!getd("$agit_"+strnpcinfo(2)+"[5]")) {
						if (getgdskilllv(.@GID,10002) == 0) {
							mes .@n$;
							mes "Me desculpe, mas a Runa";
							mes "Guardiã ainda não é poderosa o suficiente";
							mes "para chamar Guardiões. Nós";
							mes "precisamos acumular mais";
							mes "conhecimentos antes de poderem";
							mes "invocar todos os Guardiões.";
							close;
						}
						else {
							mes .@n$;
							mes "Vou tentar convocar";
							mes "um guardião através de uma Runa";
							mes "Guardiã. No entanto, tenha em mente";
							mes "que isso não vai funcionar se a";
							mes "Runa Guardiã estiver destruída.";
							setd "$agit_"+strnpcinfo(2)+"[5]",1;
							if (!getd("$agit_"+strnpcinfo(2)+"[0]"))
								donpcevent "gard1#"+strnpcinfo(4)+"::OnEnable";
							if (!getd("$agit_"+strnpcinfo(2)+"[1]"))
								donpcevent "gard2#"+strnpcinfo(4)+"::OnEnable";
							close;
						}
					}
					else {
						mes .@n$;
						mes "Você já me pediu";
						mes "para sumonar um Guardião";
						mes "para defender a fortaleza.";
						close;
					}
				case 2:
					mes .@n$;
					mes "O estado da sua defesa é...";
					setarray .@status$[0],"^4D4DFFOperacional","^FF0000Destruída","^008000Reparando";
					mes "1ª Runa Guardiã: "+.@status$[getd("$agit_"+strnpcinfo(2)+"[0]")]+"^000000";
					mes "2ª Runa Guardiã: "+.@status$[getd("$agit_"+strnpcinfo(2)+"[1]")]+"^000000";
					mes "1º Portão: "+.@status$[getd("$agit_"+strnpcinfo(2)+"[2]")]+"^000000";
					mes "2º Portão: "+.@status$[getd("$agit_"+strnpcinfo(2)+"[3]")]+"^000000";
					mes "3º Portão: "+.@status$[getd("$agit_"+strnpcinfo(2)+"[4]")]+"^000000";
					close;
				case 3:
					mes .@n$;
					mes "Eu estarei aqui,";
					mes "esperando suas ordens.";
					close;
				}
			}
		}
	}
	else {
		mes .@n$;
		mes "Quem é você? Malandro!";
		mes "Saia daqui agora!";
		close;
	}

OnInit:
	setarray getd("$agit_"+strnpcinfo(2)+"[0]"),0,0,0,0,0,0;
	end;
}

// Guild Kafras
//============================================================
-	script	Funcionária Kafra#template	-1,{
	cutin "kafra_01",2;
	set .@GID, getcastledata(strnpcinfo(4),CD_GUILD_ID);
	if (getcharid(2) == .@GID && getgdskilllv(.@GID,10001)) {
		mes "[Funcionária Kafra]";
		mes "Bem-vindo, orgulhoso membro";
		mes "da Guilda ^FF0000"+GetGuildName(.@GID)+"^000000!";
		mes "A Corporação Kafra estará pronta";
		mes "para ajudá-lo onde quer que esteja!";
		next;
		switch(select("Usar Armazém:Usar Serviço de Teleporte:Alugar Carrinho:Cancelar")) {
		case 1:
			if(!callfunc("F_CanOpenStorage")){
				mes "[Funcionária Kafra]";
				mes "Sinto muito, mas você deve";
				mes "possuir pelo menos as Habilidades Básicas";
				mes "no Nv.6 para utilizar o Armazém.";
			}
			else openstorage;
			break;
		case 2:
			mes "[Funcionária Kafra]";
			mes "Por favor, me diga o seu";
			mes "destino.";
			next;
			switch(select("Rachel -> 200 z:Cancelar")) {
			case 1:
				if (Zeny < 200) {
					mes "[Funcionária Kafra]";
					mes "Me desculpe, mas você não";
					mes "zenys suficientes para pagar";
					mes "a taxa de teleporte. Será que você";
					mes "precisa verificar seus fundos novamente?";
					close2;
					cutin "kafra_01",255;
					end;
				}
				set Zeny, Zeny-200;
				warp "rachel",115,125;
				end;
			case 2:
				cutin "kafra_01",255;
				break;
			}
			break;
		case 3:
			if (BaseClass != Job_Merchant) {
				mes "[Funcionária Kafra]";
				mes "Me desculpe, mas o serviço";
				mes "de aluguel de carrinhos pode ser";
				mes "usado apenas para Mercadores, Ferreiros,";
				mes "e personagens da classe Alquímista.";
			}
			else if (checkcart() == 1) {
				mes "[Funcionária Kafra]";
				mes "Hum? Você já";
				mes "alugou um Carrinho.";
			}
			else {
				mes "[Funcionária Kafra]";
				mes "O Aluguel de Carrinhos custa";
				mes "800 zenys. Você";
				mes "gostaria de alugar um Carrinho?";
				next;
				switch(select("Alugar Carrinho:Cancelar")) {
				case 1:
					if (Zeny < 800) {
						mes "[Funcionária Kafra]";
						mes "Me desculpe, mas você";
						mes "não possui zenys suficientes para";
						mes "alugar um Carrinho.";
						close2;
						cutin "kafra_01",255;
						end;
					}
					set Zeny, Zeny-800;
					setcart;
					break;
				case 2:
					break;
				}
			}
			break;
		case 4:
			mes "[Funcionária Kafra]";
			mes "Obrigado por utilizar o";
			mes "Serviço Kafra. Onde";
			mes "você for, a Kafra estará";
			mes "lá para te ajudar!";
			close2;
			cutin "kafra_01",255;
			end;
		}
		close2;
		cutin "kafra_01",255;
		end;
	}
	else {
		mes "[Funcionária Kafra]";
		mes "Me desculpe, mas eu fui";
		mes "contratado exclusivamente";
		mes "pelos membros da guilda";
		mes "^FF0000" + getguildname(.@GID) + "^000000.";
		mes "Você vai ter que contratar outra";
		mes "Empregada Kafra para ajudá-lo...";
		close2;
		cutin "kafra_01",255;
		end;
	}
}

// Guardian Stones (2)
//============================================================
-	script	Runa Guardiã#template	-1,{
	set .@GID, getcastledata(strnpcinfo(4),CD_GUILD_ID);
	set .@num, atoi(charat(strnpcinfo(1),0));
	set .@var$,"$agit_"+strnpcinfo(2);
	if (getcharid(2) == .@GID) {
		mes "^3355FFVocê precisa dos";
		mes "seguintes materiais para";
		mes "reconstruir a";
		mes "Runa Guardiã destruída.^000000";
		next;
		mes "1 Oridecon";
		mes "1 Elunium";
		mes "30 Pedras";
		mes "5 Gemas Azuis";
		mes "5 Gemas Amarelas";
		mes "5 Gemas Vermelhas";
		next;
		mes "^3355FFVocê quer continuar?^000000";
		next;
		if (select("Não:Continuar") == 1) {
			mes "^3355FFTrabalho Cancelado.^000000";
			close;
		}
		if ((countitem(984) > 0) && (countitem(985) > 0) && (countitem(7049) > 29) && (countitem(717) > 4) && (countitem(715) > 4) && (countitem(716) > 4)) {
			mes "^3355FFOrganizar Pedras, Elunium e";
			mes "Oridecon, nessa ordem, no";
			mes "centro. Então você deve organizar";
			mes "as pedras encantadas para";
			mes "reconstruir a Runa Guardiã.^000000";
			next;
			setarray .@stone$[0],"Elunium","Oridecon","Pedra";
			set .@i, select("Elunium:Oridecon:Pedra")-1;
			if (.@i == 2) set .@nice,.@nice+10;
			mes "^3355FF"+.@stone$[.@i]+" foi";
			mes "colocado no centro.^000000";
			next;
			set .@i, select("Elunium:Oridecon:Pedra")-1;
			if (.@i == 0) set .@nice,.@nice+10;
			mes "^3355FFVocê fez a sequência";
			mes "fora da ordem";
			mes "com um "+.@stone$[.@i]+".^000000";
			next;
			set .@i, select("Elunium:Oridecon:Pedra")-1;
			if (.@i == 1) set .@nice,.@nice+10;
			mes "^3355FFVocê fez a sequência";
			mes "fora da ordem";
			mes "com um "+.@stone$[.@i]+".^000000";
			next;
			mes "^3355FFAgora você precisa organizar";
			mes "de acordo as Gemas";
			mes "encantadas. Você pode identificar";
			mes "suas propriedades mágicas por";
			mes "seu efeito.^000000";
			next;
			setarray .@effect[0],EF_BEGINSPELL4,EF_BEGINSPELL2,EF_VOLCANO;
			setarray .@color$[0],"Vermelha","Amarela","Azul";
			while(1) {
				if (.@roof0 > 7) break;
				set .@i, rand(getarraysize(.@effect));
				specialeffect .@effect[.@i];
				mes "^3355FFAs Gemas devem";
				mes "ser organizadas na ordem";
				mes "de acordo com suas";
				mes "propriedades e poder.^000000";
				next;
				set .@j, select("Gema Vermelha:Gema Amarela:Gema Azul")-1;
				mes "^3355FFVocê colocou a Gema "+.@color$[.@j]+".^000000";
				if (.@i == .@j) {
					mes "^3355FFPorém, o Sistema de Reparação";
					mes "da Runa Guardiã falhou devido";
					mes "a um conflito de poderes mágicos.^000000";
					close;
				}
				set .@nice,.@nice+10;
				set .@roof0,.@roof0+1;
				specialeffect EF_STEAL;
				next;
			}
			if (.@nice > 90) {
				if (!getd(.@var$+"["+(.@num-1)+"]")) {
					mes "^3355FFO Sistema de Reparação";
					mes "da Runa Guardiã";
					mes "foi concluído.^000000";
					close;
				}
				else {
					if (!agitcheck2()) {
						mes "^3355FFÉ impossível";
						mes "reconstruir a Runa";
						mes "Guardiã por que o";
						mes "Emperium não está presente.^000000";
						close;
					}
					else {
						mes "^3355FFAs gemas foram arrumadas com";
						mes "sucesso, e a Runa";
						mes "Guardiã foi reparada com sucesso.^000000";
						delitem 984,1; 	//Oridecon
						delitem 985,1; 	//Elunium
						delitem 7049,30;//Pedra
						delitem 717,5; 	//Gema Azul
						delitem 715,5; 	//Gema Amarela
						delitem 716,5; 	//Gema Vermelha
						close2;
						donpcevent "df"+.@num+"#"+strnpcinfo(4)+"::OnEnable";
						specialeffect EF_ICECRASH;
						disablenpc strnpcinfo(0);
						setd .@var$+"["+(.@num-1)+"]",0;
						set .@df_all,getd(.@var$+"[0]")+getd(.@var$+"[1]");
						if (!.@df_all) {
							mapannounce strnpcinfo(4),"Todas as Runas Guardiãs foram erguidas, a defesa do Castelo foi reforçada!",bc_map,"0x00ff00";
							donpcevent "RL0#"+strnpcinfo(4)+"::OnEnable";
						}
						else mapannounce strnpcinfo(4),"A "+strnpcinfo(1)+" foi reconstruída com sucesso.",bc_map,"0x00ff00";
						if (getd(.@var$+"[5]") == 1)
							donpcevent "gard"+.@num+"#"+strnpcinfo(4)+"::OnEnable";
						end;
					}
				}
			}
			else {
				mes "^3355FFApós todo esse trabalho...";
				mes "Parece que você não foi possível";
				mes "reconstruir a Runa Guardiã,";
				mes "e você também perdeu os materiais.^000000";
				delitem 7049,10; // Pedra
				delitem 717,2; 	 // Gema Azul
				delitem 715,2; 	 // Gema Amarela
				delitem 716,2; 	 // Gema Vermelha
				close;
			}
		}
		else {
			mes "^3355FFVocê não possui os";
			mes "materiais suficientes para reparar";
			mes "a Runa Guardiã.^000000";
			close;
		}
	}
	end;

OnInit:
OnDisable:
	disablenpc strnpcinfo(0);
	end;

OnEnable:
	enablenpc strnpcinfo(0);
	specialeffect EF_MAPPILLAR2;
	end;
}

// Control Devices (3)
//============================================================
-	script	Dispositivo de Controle#template	-1,{
	set .@GID, getcastledata(strnpcinfo(4),CD_GUILD_ID);
	set .@num, atoi(charat(strnpcinfo(1),15));
	set .@var$,"$agit_"+strnpcinfo(2);
	if (getcharid(2) == .@GID) {
		if (is_guild_leader() == true) {
			if (getd(.@var$+"["+(.@num+1)+"]") == 2) {
				mes "^3355FFOs Portões Demolidos do";
				mes "Castelo podem ser reparados,";
				mes "mas você terá que recolher";
				mes "os seguintes materiais.^000000";
				next;
				mes "^4D4DFF10 Aço^000000,";
				mes "^4D4DFF30 Troncos^000000,";
				mes "^4D4DFF5 Oridecon^000000, e";
				mes "^4D4DFF10 Emveretarcon^000000.";
				next;
				select("Continuar");
				if ((countitem(1019) > 29) && (countitem(999) > 9) && (countitem(1011) > 9) && (countitem(984) > 4)) {
					mes "^3355FFVocê precisa de Troncos para";
					mes "reparar a estrutura de suporte,";
					mes "Oridecon para melhorar a";
					mes "resistência do portão, e";
					mes "Emveretarcon para basicamente";
					mes "manter tudo junto.^000000";
					next;
					set .@ro_of01,rand(10,15);
					while(1) {
						if (.@ro_of02 == .@ro_of01) break;
						else {
							switch(rand(1,4)) {
							case 1:
								mes "^3355FFA estrutura de suporte";
								mes "está muito danificada:";
								mes "consertar essa parte";
								mes "é a prioridade maior.^000000";
								next;
								switch(select("Tronco:Aço:Emveretarcon:Oridecon")) {
								case 1:
									mes "^3355FFA estrutura foi";
									mes "reforçada com madeira.^000000";
									set .@rp_temp,.@rp_temp+1;
									set .@ro_of02,.@ro_of02+1;
									specialeffect2 EF_REPAIRWEAPON;
									next;
									break;
								case 2:
									mes "^3355FFVocê tentou usar o aço,";
									mes "mas não funcionou";
									mes "corretamente. Você deve tentar";
									mes "de outra forma.^000000";
									close;
								case 3:
									mes "^3355FFVocê tentou usar emveretarcon";
									mes "para reforçar o portão, mas não funcionou";
									mes "corretamente.";
									mes "Você terá que começar novamente.^000000";
									close;
								case 4:
									mes "^3355FFVocê tentou usar emveretarcon";
									mes "para reforçar o portão, mas não funcionou";
									mes "corretamente.";
									mes "Você terá que começar novamente.^000000";
									close;
								}
								break;
							case 2:
								mes "^3355FFParece que a resistência";
								mes "do portão precisa ser";
								mes "reforçada com alguma coisa.^000000";
								next;
								switch(select("Tronco:Aço:Emveretarcon:Oridecon")) {
								case 1:
									mes "^3355FFVocê tentou usar";
									mes "madeira para reforçar o portão.^000000";
									set .@ro_of02,.@ro_of02+1;
									next;
									break;
								case 2:
									mes "^3355FFVocê tentou usar aço";
									mes "para reforçar o portão, mas não funcionou";
									mes "corretamente.";
									mes "Você terá que começar novamente.^000000";
									close;
								case 3:
									mes "^3355FFVocê tentou usar emveretarcon";
									mes "para reforçar o portão, mas não funcionou";
									mes "corretamente.";
									mes "Você terá que começar novamente.^000000";
									close;
								case 4:
									mes "^3355FFVocê martelou o portão com";
									mes "oridecon: parece";
									mes "que funcionou.^000000";
									set .@rp_temp,.@rp_temp+1;
									set .@ro_of02,.@ro_of02+1;
									specialeffect2 EF_REPAIRWEAPON;
									next;
									break;
								}
								break;
							case 3:
								mes "^3355FFOs danos a esse portão";
								mes "causaram todas estas";
								mes "rachaduras. Você terá que";
								mes "soldá-lo com algo.^000000";
								next;
								switch(select("Tronco:Aço:Emveretarcon:Oridecon")) {
								case 1:
									mes "^3355FFVocê tentou usar madeira";
									mes "para consertar o problema, mas parece";
									mes "ter piorado o problema.";
									mes "Você terá que começar novamente.^000000";
									close;
								case 2:
									mes "^3355FFVocê usou aço para soldar";
									mes "todas as rachaduras: o portão";
									mes "começou a aparentar estar mais sólido.^000000";
									set .@rp_temp,.@rp_temp+1;
									set .@ro_of02,.@ro_of02+1;
									specialeffect2 EF_REPAIRWEAPON;
									next;
									break;
								case 3:
									mes "^3355FFVocê tentou usar emveretarcon";
									mes "para reforçar o portão, mas não funcionou";
									mes "corretamente.";
									mes "Você terá que começar novamente.^000000";
									close;
								case 4:
									mes "^3355FFVocê tentou usar oridecon,";
									mes "mas não funcionou";
									mes "corretamente. Você deve tentar";
									mes "de outra forma.^000000";
									close;
								}
								break;
							case 4:
								mes "^3355FFAgora você precisa ter";
								mes "certeza de que o portão está";
								mes "sólido e firme.^000000";
								next;
								switch(select("Tronco:Aço:Emveretarcon:Oridecon")) {
								case 1:
									mes "^3355FFVocê tentou usar madeira";
									mes "para consertar o problema, mas parece";
									mes "ter piorado o problema.";
									mes "Você terá que começar novamente.^000000";
									close;
								case 2:
									mes "^3355FFVocê tentou usar o aço,";
									mes "mas não funcionou";
									mes "corretamente. Você deve tentar";
									mes "de outra forma.^000000";
									close;
								case 3:
									mes "^3355FFVocê conseguiu";
									mes "usar o emveretarcon para reparar";
									mes "muito do dano causado ao portão.^000000";
									set .@rp_temp,.@rp_temp+1;
									set .@ro_of02,.@ro_of02+1;
									specialeffect2 EF_REPAIRWEAPON;
									next;
									break;
								case 4:
									mes "^3355FFVocê tentou usar oridecon,";
									mes "mas não funcionou";
									mes "corretamente. Você deve tentar";
									mes "de outra forma.^000000";
									close;
								}
							}
						}
					}
					mes "^3355FFBem, parece que";
					mes "você está quase terminando";
					mes "de reparar o portão.^000000";
					next;
					if (!agitcheck2()) {
						mes "^3355FFInfelizmente, o Portão do";
						mes "Castelo não pode ser reconstruído:";
						mes "o Emperium não está presente.^000000";
						close;
					}
					else {
						if (.@rp_temp == .@ro_of01) {
							mes "^3355FFO portão do castelo";
							mes "foi reparado com sucesso!^000000";
							delitem 1019,30; // Tronco
							delitem 999,10;  // Aço
							delitem 1011,10; // Emveretarcon
							delitem 984,5;   // Oridecon
							close2;
							donpcevent "RL"+.@num+"#"+strnpcinfo(4)+"::OnEnable";
							disablenpc strnpcinfo(0);
							if (.@num == 1) set .@str$,"1º";
							else if (.@num == 2) set .@str$,"2º";
							else if (.@num == 3) set .@str$,"3º";
							mapannounce strnpcinfo(4),"O "+.@str$+" Portão do Castelo foi reconstruído!",bc_map,"0x00ff00";
							if (.@num == 1) setd .@var$+"[2]",0;
							else {
								setarray getd(.@var$+"["+.@num+"]"),2,0;
								donpcevent "Dispositivo de Controle0"+(.@num-1)+"#"+strnpcinfo(2)+"::OnEnable";
							}
							end;
						}
						else {
							mes "^3355FFA parede foi quebrada,";
							mes "e a tentativa de reparar o";
							mes "Portão do Castelo falhou.";
							mes "Você perdeu seus";
							mes "recursos para reparo...^000000";
							delitem 984,2;   // Oridecon
							delitem 999,4;   // Aço
							delitem 1019,14; // Tronco
							delitem 1011,3;  // Emveretarcon
							close;
						}
					}
				}
				else {
					mes "^3355FFVocê não pode tentar reparar";
					mes "o Portão da Fortaleza se você não";
					mes "possuir todos os materiais necessários.^000000";
					close;
				}
			}
		}
	}
	end;

OnInit:
OnDisable:
	disablenpc strnpcinfo(0);
	end;

OnEnable:
	enablenpc strnpcinfo(0);
	end;
}

// Guardian Summoners (2)
//============================================================
-	script	gard#template	-1,{
OnEnable:
	// .@x[i],.@y[i]: Normal coordinates, #0-21.
	// .@w[x],.@w[y]: Special coordinates if 'defence' is under 11.
	if (compare(strnpcinfo(2),"arug")) {
		if (strnpcinfo(2) == "arug_cas01") {
			setarray .@w[0],195,250,292,188;
			setarray .@x[0],233,252,232,201,224,196,269,252,201,224,222, 294,256,240,246,235,235,246,240,256,254,242;
			setarray .@y[0], 83, 81,108,130,168,137, 89, 81,130,168,129, 210,203,133, 92,132,132, 92,133,203, 95,151;
		}
		else if (strnpcinfo(2) == "arug_cas02") {
			setarray .@w[0],20,169,268,169;
			setarray .@x[0],104,67,67,113,122,67, 90, 91,122, 20,67, 175,204,211,209,161,186,183,150,161,209,211;
			setarray .@y[0], 32,36,85, 87,112,60,167,119,112,169,85,  31, 32, 63, 88, 91,170,121,110, 91, 88, 63;
		}
		else {	// Castles 3,4,5 are identical.
			setarray .@w[0],66,157,211,159;
			setarray .@x[0],130,128,128,128,110,91,65, 65,110,128,128, 156,172,154,156,155,187,212,211,155,156,172;
			setarray .@y[0], 60, 77, 90,100, 96,53,71,103, 96,100, 77, 101, 95, 90, 77, 60, 54, 67,105, 60, 77, 95;
		}
	}
	else {
		if (strnpcinfo(2) == "schg_cas02") {
			setarray .@w[0],337,95,307,222;
			setarray .@x[0],326,337,334,296,285,236,285,296,334,337,334, 359,300,337,317,307,300,337,317,307,359,236;
			setarray .@y[0], 83, 95,119, 82, 40, 41, 40, 82,119, 95,119,  85,119,154,183,222,119,154,183,222, 85, 41;
		}
		else if (strnpcinfo(2) == "schg_cas03") {
			setarray .@w[0],306,325,364,305;
			setarray .@x[0],323,273,288,306,323,323,273,288,306,273,273, 338,364,365,317,338,338,364,365,317,364,329;
			setarray .@y[0],308,309,306,326,308,308,309,306,325,309,309, 309,305,261,318,310,309,305,261,318,305,314;
		}
		else {	// Castles 1,4,5 are identical.
			setarray .@w[0],108,32,128,42,187,15;	// Contains an extra pair, for whatever reason.
			setarray .@x[0],111,109,65,110,88,64,47,109,111,112,120, 130,129,151,187,128,152,187,128,130,130,151;
			setarray .@y[0], 18, 44,22, 40,20,40,43, 48, 18, 32, 37,  22, 47, 18, 15, 42, 43, 15, 42, 22, 28, 18;
		}
	}
	if (charat(strnpcinfo(1),4) == "2") set .@z,11;
	freeloop(1);
	set .@defence,getcastledata(strnpcinfo(2),CD_CURRENT_DEFENSE);
	callsub OnSummon,.@z;
	if (.@defence > 70) set getd(".MyMobCount_"+charat(strnpcinfo(1),4)+strnpcinfo(2)),5;
	else if (.@defence > 50) set getd(".MyMobCount_"+charat(strnpcinfo(1),4)+strnpcinfo(2)),4;
	else if (.@defence > 30) set getd(".MyMobCount_"+charat(strnpcinfo(1),4)+strnpcinfo(2)),3;
	else if (.@defence > 10) set getd(".MyMobCount_"+charat(strnpcinfo(1),4)+strnpcinfo(2)),2;
	if (.@w[4] && .@z)
		guardian strnpcinfo(2),.@w[4],.@w[5],"Soldado Guardião",1899,strnpcinfo(0)+"::OnGuardianDied";
	else if (.@defence < 11) {
		set getd(".MyMobCount_"+charat(strnpcinfo(1),4)+strnpcinfo(2)),2;
		set .@i,(.@z)?2:0;
		guardian strnpcinfo(2),.@w[.@i],.@w[.@i+1],"Soldado Guardião",1899,strnpcinfo(0)+"::OnGuardianDied";
	}
	else for(set .@i,1; .@i<getd(".MyMobCount_"+charat(strnpcinfo(1),4)+strnpcinfo(2)); set .@i,.@i+1)
		callsub OnSummon,.@i+.@z;
	freeloop(0);
	copyarray getd(".x_"+strnpcinfo(2)+"[0]"),.@x[0],22;
	copyarray getd(".y_"+strnpcinfo(2)+"[0]"),.@y[0],22;
	setd ".timer_"+charat(strnpcinfo(1),4)+strnpcinfo(2),4+.@z;
	setarray .count$[5],"1º","2º","3º","4º","5º";
	initnpctimer;
	end;

OnTimer300000:
OnTimer900000:
OnTimer1800000:
OnTimer2700000:
OnTimer3600000:
	if (charat(strnpcinfo(1),4) == "2") end;
	set .@var$,".timer_"+charat(strnpcinfo(1),4)+strnpcinfo(2);
	setd .@var$, getd(.@var$)+1;
	set getd(".MyMobCount_"+charat(strnpcinfo(1),4)+strnpcinfo(2)),getd(".MyMobCount_"+charat(strnpcinfo(1),4)+strnpcinfo(2))+1;
	callsub OnSummon,getd(.@var$);
	setarray .count$[5],"1º","2º","3º","4º","5º";
	mapannounce strnpcinfo(2),"O "+.count$[getd(.@var$)]+" Guardião foi invocado.",bc_map,"0xff4500";
	if (getd(.@var$) == 9) {
		setd .@var$,0;
		stopnpctimer;
	}
	end;

OnTimer600000:
OnTimer1200000:
OnTimer2100000:
OnTimer3000000:
OnTimer3900000:
	if (!(charat(strnpcinfo(1),4) == "2")) end;
	set .@var$,".timer_"+charat(strnpcinfo(1),4)+strnpcinfo(2);
	setd .@var$, getd(.@var$)+1;
	set getd(".MyMobCount_"+charat(strnpcinfo(1),4)+strnpcinfo(2)),getd(".MyMobCount_"+charat(strnpcinfo(1),4)+strnpcinfo(2))+1;
	callsub OnSummon,getd(.@var$);
	if (getd(.@var$) == 20) {
		setd .@var$,0;
		stopnpctimer;
	}
	end;

OnSummon:
	guardian strnpcinfo(2),getd(".x_"+strnpcinfo(2)+"["+getarg(0)+"]"),getd(".y_"+strnpcinfo(2)+"["+getarg(0)+"]"),"Soldado Guardião",1899,strnpcinfo(0)+"::OnGuardianDied";
	return;

OnGuardianDied:
	if (charat(strnpcinfo(1),4) == "2") set .@z,11;
	set getd(".MyMobCount_"+charat(strnpcinfo(1),4)+strnpcinfo(2)),getd(".MyMobCount_"+charat(strnpcinfo(1),4)+strnpcinfo(2))-1;
	if (getd(".MyMobCount_"+charat(strnpcinfo(1),4)+strnpcinfo(2)) < 2) {
		set getd(".MyMobCount_"+charat(strnpcinfo(1),4)+strnpcinfo(2)),getd(".MyMobCount_"+charat(strnpcinfo(1),4)+strnpcinfo(2))+1;
		callsub OnSummon,10+.@z;
	}
	end;

OnReset:
	stopnpctimer;
	killmonster strnpcinfo(2),strnpcinfo(0)+"::OnGuardianDied";
	deletearray getd(".x_"+strnpcinfo(2)+"[0]"),22;
	deletearray getd(".y_"+strnpcinfo(2)+"[0]"),22;
	end;
}

// Guardian Stone Summoners (2)
//============================================================
-	script	df#template	-1,{
OnEnable:
	if (compare(strnpcinfo(2),"arug")) {
		if (strnpcinfo(2) == "arug_cas01") setarray .@i[0],210,234,308,189;
		else if (strnpcinfo(2) == "arug_cas02") setarray .@i[0],33,168,245,168;
		else setarray .@i[0],65,171,212,149;	// Castles 3,4,5 are identical.
	}
	else {
		if (strnpcinfo(2) == "schg_cas02") setarray .@i[0],231,58,335,230;
		else if (strnpcinfo(2) == "schg_cas03") setarray .@i[0],242,309,376,251;
		else setarray .@i[0],27,35,207,75;	// Castles 1,4,5 are identical.
	}
	set .@num, atoi(charat(strnpcinfo(1),2));
	set .@j,(.@num == 1)?0:2;
	guardian strnpcinfo(2),.@i[.@j],.@i[.@j+1],((.@num == 1)?"1ª":"2ª")+" Runa Guardiã",1906+.@num,strnpcinfo(0)+"::OnGuardianStoneDied";
	end;

OnDisable:
	killmonster strnpcinfo(2),strnpcinfo(0)+"::OnGuardianStoneDied";
	setd "$agit_"+substr(strnpcinfo(2),0,1)+substr(strnpcinfo(2),8,9)+"["+(atoi(charat(strnpcinfo(1),2))-1)+"]",1;
	stopnpctimer;
	end;

OnGuardianStoneDied:
	set .@num, atoi(charat(strnpcinfo(1),2));
	set .@var$,"$agit_"+substr(strnpcinfo(2),0,1)+substr(strnpcinfo(2),8,9);
	setd .@var$+"["+(.@num-1)+"]",1;
	if (getd(.@var$+"[0]") == 1 || getd(.@var$+"[0]") == 2) set .@destroyed, .@destroyed+1;
	if (getd(.@var$+"[1]") == 1 || getd(.@var$+"[1]") == 2) set .@destroyed, .@destroyed+1;
	if (.@destroyed == 2) {
		mapannounce strnpcinfo(2),"Todas as Runas Guardiãs foram destruídas!",bc_map,"0x00ff00";
		donpcevent "RL0#"+strnpcinfo(2)+"::OnDisable";
	}
	else mapannounce strnpcinfo(2),"A "+((.@num == 1)?"1ª":"2ª")+" Runa Guardiã foi destruída!",bc_map,"0x00ff00";
	donpcevent "gard"+.@num+"#"+strnpcinfo(2)+"::OnReset";
	initnpctimer;
	end;

OnTimer300000:
	set .@num, atoi(charat(strnpcinfo(1),2));
	set .@str$,substr(strnpcinfo(2),0,1)+substr(strnpcinfo(2),8,9);
	donpcevent ((.@num == 1)?"1ª":"2ª")+"Runa Guardiã#"+.@str$+"::OnEnable";
	setd "$agit_"+.@str$+"["+(atoi(charat(strnpcinfo(1),2))-1)+"]",2;
	stopnpctimer;
	end;
}

// Barrier Summoners (4)
//============================================================
-	script	RL#template	-1,{
OnEnable:
	.@npc_name$ = strnpcinfo(0);
	.@npc_visible$ = strnpcinfo(1);
	.@npc_hidden$ = strnpcinfo(2);
	set .@num, atoi(charat(.@npc_visible$,2));
	if (.@num == 0) {
		if (compare(.@npc_hidden$,"arug")) {
			if (.@npc_hidden$ == "arug_cas01") {
				setarray .@wall[0],238,74,8,6,0;
				setarray .@x[0],239,241,243,245;
				setarray .@y[0], 73, 73, 73, 73;
			}
			else if (.@npc_hidden$ == "arug_cas02") {
				setarray .@wall[0],136,136,8,6,0;
				setarray .@x[0],137,139,141,143;
				setarray .@y[0],137,137,137,137;
			}
			else {	// Castles 3,4,5 are identical.
				setarray .@wall[0],138,110,8,6,0;
				setarray .@x[0],139,141,143,145;
				setarray .@y[0],111,111,111,111;
			}
		}
		else {
			if (.@npc_hidden$ == "schg_cas02") {
				setarray .@wall[0],290,98,8,0,0;
				setarray .@x[0],289,289,289,289;
				setarray .@y[0], 98,100,102,104;
			}
			else if (.@npc_hidden$ == "schg_cas03") {
				setarray .@wall[0],326,301,6,6,0;
				setarray .@x[0],326,328,330;
				setarray .@y[0],300,300,300;
			}
			else {	// Castles 1,4,5 are identical.
				setarray .@wall[0],114,48,13,6,0;
				setarray .@x[0],115,117,119,121,123,125;
				setarray .@y[0], 49, 49, 49, 49, 49, 49;
			}
		}
	}
	else if (.@num == 1) {
		if (compare(.@npc_hidden$,"arug")) {
			if (.@npc_hidden$ == "arug_cas01") {
				setarray .@wall[0],239,53,8,6,1;
				setarray .@x[0],239,241,243,240,242,244;
				setarray .@y[0], 55, 55, 55, 54, 54, 54;
			}
			else if (.@npc_hidden$ == "arug_cas02") {
				setarray .@wall[0],150,223,12,6,1;
				setarray .@x[0],151,153,155,157,159,161;
				setarray .@y[0],222,222,222,222,222,222;
			}
			else {	// Castles 3,4,5 are identical.
				setarray .@wall[0],139,158,6,6,1;
				setarray .@x[0],140,142,144,139,141,143;
				setarray .@y[0],157,157,157,156,156,156;
			}
		}
		else {
			if (.@npc_hidden$ == "schg_cas02") {
				setarray .@wall[0],279,98,8,0,1;
				setarray .@x[0],280,280,280,281,281,281;
				setarray .@y[0], 98,100,102, 99,101,103;
			}
			else if (.@npc_hidden$ == "schg_cas03") {
				setarray .@wall[0],325,277,8,6,1;
				setarray .@x[0],326,328,330,327,329,331;
				setarray .@y[0],278,278,278,279,279,279;
			}
			else {	// Castles 1,4,5 are identical.
				setarray .@wall[0],114,51,13,6,1;
				setarray .@x[0],115,117,119,121,123,125;
				setarray .@y[0], 50, 50, 50, 50, 50, 50;
			}
		}
	}
	else if (.@num == 2) {
		if (compare(.@npc_hidden$,"arug")) {
			if (.@npc_hidden$ == "arug_cas01") {
				setarray .@wall[0],107,124,6,6,1;
				setarray .@x[0],107,109,111,108,110,112;
				setarray .@y[0],122,122,122,123,123,123;
			}
			else if (.@npc_hidden$ == "arug_cas02") {
				setarray .@wall[0],125,342,8,0,1;
				setarray .@x[0],126,126,126,127,127,127;
				setarray .@y[0],343,345,347,344,346,348;
			}
			else {	// Castles 3,4,5 are identical.
				setarray .@wall[0],138,210,8,6,1;
				setarray .@x[0],140,142,144,139,141,143;
				setarray .@y[0],209,209,209,208,208,208;
			}
		}
		else {
			if (.@npc_hidden$ == "schg_cas02") {
				setarray .@wall[0],230,213,6,0,1;
				setarray .@x[0],231,231,231,232,232,232;
				setarray .@y[0],213,215,217,213,215,217;
			}
			else if (.@npc_hidden$ == "schg_cas03") {
				setarray .@wall[0],200,230,8,0,1;
				setarray .@x[0],201,201,201,202,202,202;
				setarray .@y[0],231,233,235,232,234,236;
			}
			else {	// Castles 1,4,5 are identical.
				setarray .@wall[0],114,154,13,6,1;
				setarray .@x[0],115,117,119,121,123,125;
				setarray .@y[0],153,153,153,153,153,153;
			}
		}
	}
	else {
		if (compare(.@npc_hidden$,"arug")) {
			if (.@npc_hidden$ == "arug_cas01") {
				setarray .@wall[0],84,171,8,6,1;
				setarray .@x[0], 84, 86, 88, 90;
				setarray .@y[0],170,170,170,170;
			}
			else if (.@npc_hidden$ == "arug_cas02") {
				setarray .@wall[0],38,314,12,6,1;
				setarray .@x[0], 40, 42, 44, 46;
				setarray .@y[0],315,315,315,315;
			}
			else {	// Castles 3,4,5 are identical.
				setarray .@wall[0],138,263,8,6,1;
				setarray .@x[0],139,141,143,145;
				setarray .@y[0],262,262,262,262;
			}
		}
		else {
			if (.@npc_hidden$ == "schg_cas02") {
				setarray .@wall[0],160,141,6,6,1;
				setarray .@x[0],160,162,164,166;
				setarray .@y[0],140,140,140,140;
			}
			else if (.@npc_hidden$ == "schg_cas03") {
				setarray .@wall[0],285,198,8,0,1;
				setarray .@x[0],284,284,284,284;
				setarray .@y[0],199,201,203,205;
			}
			else {	// Castles 1,4,5 are identical.
				setarray .@wall[0],116,241,11,6,1;
				setarray .@x[0],116,118,120,122;
				setarray .@y[0],240,240,240,240;
			}
		}
	}
	setwall .@npc_hidden$,.@wall[0],.@wall[1],.@wall[2],.@wall[3],.@wall[4],substr(.@npc_hidden$,0,1)+substr(.@npc_hidden$,8,9)+"_"+.@npc_visible$;
	switch(.@num) {
	case 0:
		killmonster .@npc_hidden$, .@npc_name$ + "::OnBarrierDestroyed";
		.@j = getarraysize(.@x);
		for ( .@i = 0; .@i < .@j; ++.@i ) {
			.@unit_id = guardian( .@npc_hidden$,.@x[.@i],.@y[.@i]," ",1905, .@npc_name$ + "::OnBarrierDestroyed" );
			setunitdata .@unit_id,UMOB_DMGIMMUNE,1; // The 1st barricades are immunes to damage until both Guardian Stones are destroyed
		}
		end;
	case 3:
		setd ".MyMobCount_" + .@num + .@npc_hidden$, 4;
		break;
	default:
		setd ".MyMobCount_" + .@num + .@npc_hidden$, 6;
		break;
	}
	for ( .@i = 0; .@i < getd( ".MyMobCount_" + .@num + .@npc_hidden$ ); ++.@i )
		guardian .@npc_hidden$,.@x[.@i],.@y[.@i]," ",1905, .@npc_name$ + "::OnBarrierDestroyed";
	end;

OnBarrierDestroyed:
	set .@num, atoi(charat(strnpcinfo(1),2));
	if (!.@num) end;
	set getd(".MyMobCount_"+.@num+strnpcinfo(2)),getd(".MyMobCount_"+.@num+strnpcinfo(2))-1;
	if (getd(".MyMobCount_"+.@num+strnpcinfo(2)) == 0) {
		set .@var$,substr(strnpcinfo(2),0,1)+substr(strnpcinfo(2),8,9);
		setd "$agit_"+.@var$+"["+(.@num+1)+"]",1;
		setarray .@count$[0],"1º","2º","3º";
		mapannounce strnpcinfo(2),"The "+.@count$[.@num-1]+" Fortress Gate is destroyed.",bc_map,"0x00ff00";
		delwall .@var$+"_"+strnpcinfo(1);
	}
	end;

OnDisable:
	.@wall_name$ = substr(strnpcinfo(2),0,1) + substr(strnpcinfo(2),8,9) + "_" + strnpcinfo(1);
	if (checkwall(.@wall_name$) == true)
		delwall .@wall_name$;
	killmonster strnpcinfo(2),strnpcinfo(0)+"::OnBarrierDestroyed";
	end;
}

// Link Flags (function)
//============================================================
function	script	LinkFlag	{
	if (!getcharid(2) || getcharid(2) != getcastledata(strnpcinfo(4),CD_GUILD_ID)) end;
	if (getarg(0) == "Convenience Facility") {
		mes "^3355FFEste é o Serviço de Teleporte";
		mes "ao Castelo. Por favor";
		mes "você deseja se teleportar para";
		mes "o Serviço de Quarto?^000000";
		if(select("Ir para o Serviço de Quarto:Cancelar") == 1)
			warp strnpcinfo(4),getarg(1),getarg(2);
		close;
	}
	if (getarg(0) == "Emperium Central") {
		mes "^3355FFEste é o Serviço de Teleporte";
		mes "ao Castelo. Por favor";
		mes "você deseja se teleportar para";
		mes "o Emperium Central?^000000";
		if (select("Teleportar:Cancelar") == 1)
			warp strnpcinfo(4),getarg(1),getarg(2);
		close;
	}
	mes "^3355FFEste é o Serviço de Teleporte";
	mes "ao Castelo. Por favor";
	mes "escolha seu destino no castelo^000000";
	for(set .@i,0; .@i<getargcount(); set .@i,.@i+3)
		set .@menu$, .@menu$+getarg(.@i)+":";
	set .@menu$, .@menu$+"Cancelar";
	set .@i, select(.@menu$)-1;
	if (.@i != getargcount()/3)
		warp strnpcinfo(4),getarg(.@i*3+1),getarg(.@i*3+2);
	close;
}

// Return Flags (function)
//============================================================
function	script	ReturnFlag	{
	.@map$ = getarg(0);
	set .@str$, (compare(strnpcinfo(4),"aru"))?"Arunafeltz":"Schwaltzvalt";
	.@GID =  getcastledata(.@map$,CD_GUILD_ID);
	if (!.@GID) {
		mes "[ "+.@str$+" Decreto Real ]";
		mes "O Reino Sagrado de";
		mes .@str$+" declara que ainda";
		mes "é necessário que se possua um";
		mes "dono deste castelo. Quem";
		mes "quebrar o Emperium será";
		mes "reconhecido como o seu novo proprietário.";
		close;
	}
	if (getcharid(2) == .@GID && getarg(1,0)) {
		mes "[ Voz Ecoante ]";
		mes "Um corajoso,";
		mes "se você quiser voltar";
		mes "para seu castelo?";
		next;
		if(select("Retornar para a fortaleza:Cancelar") == 1 && getcharid(2) == getcastledata(getarg(0),1)) {
			if (compare(.@map$,"arug")) {
				if (.@map$ == "arug_cas01") setarray .@i[0],67,193;
				else if (.@map$ == "arug_cas02") setarray .@i[0],43,256;
				else setarray .@i[0],121,318;	// Castles 3,4,5 are identical.
			}
			else {
				if (.@map$ == "schg_cas02") setarray .@i[0],136,188;
				else if (.@map$ == "schg_cas03") setarray .@i[0],308,202;
				else setarray .@i[0],120,290;	// Castles 1,4,5 are identical.
			}
			warp .@map$,.@i[0],.@i[1];
		}
		close;
	}
	mes "[ "+.@str$+" Decreto Real ]";
	mes "O Reino Sagrado de";
	mes .@str$+" decreta que";
	mes "este castelo pertence";
	mes "a Guilda ^FF0000"+getguildname(.@GID)+"^000000.";
	next;
	mes "[ "+.@str$+" Decreto Real ]";
	mes "^FF0000"+getguildmaster(.@GID)+"^000000 pertence";
	mes "ao Líder do Clã ^FF0000"+getguildname(.@GID)+"^000000.";
	mes "Quem queira atacar este";
	mes "castelo, deve atacar através da força do";
	mes "aço e da magia usando-os nos tempos de Guerra.";
	close;
}

// Treasure Room Switches
//============================================================
-	script	Dispositivo#template	-1,{
	mes " ";
	mes "^3355FFVocê vai puxar";
	mes "esta pequena alavanca?^000000";
	next;
	if(select("Puxar:Cancelar") == 2) close;
	if (compare(strnpcinfo(4),"arug")) {
		if (strnpcinfo(4) == "arug_cas01") setarray .@i[0],121,357;
		else if (strnpcinfo(4) == "arug_cas02") setarray .@i[0],387,323;
		else setarray .@i[0],321,57;	// Castles 3,4,5 are identical.
	}
	else {
		if (strnpcinfo(4) == "schg_cas02") setarray .@i[0],339,79;
		else if (strnpcinfo(4) == "schg_cas03") setarray .@i[0],57,13;
		else setarray .@i[0],275,244;	// Castles 1,4,5 are identical.
	}
	warp strnpcinfo(4),.@i[0],.@i[1];
	close;
}

// Guild Dungeon Warps
//============================================================
-	script	Girassol#template	-1,{
	if (getcharid(2) == getcastledata(strnpcinfo(4),CD_GUILD_ID)) {
		mes "- É um enorme girassol, é tão grande quanto um ser humano! ... Você sente que algo misterioso é emanado da flor. -";
		next;
		switch(select("Segurar o Tronco.:Não fazer nada.")) {
		case 1:
			if (compare(strnpcinfo(4),"arug")) {
				set .@map$,"arug_dun01";
				setarray .@mapx[0],350,350,50, 50,200;
				setarray .@mapy[0],350, 50,50,350,386;
			}
			else {
				set .@map$,"schg_dun01";
				setarray .@mapx[0],262, 94, 79,212,322;
				setarray .@mapy[0],314,284,140, 70,166;
			}
			set .@i, atoi(charat(strnpcinfo(4),9))-1;
			warp .@map$,.@mapx[.@i],.@mapy[.@i];
			close;
		case 2:
			mes "É muito assustador tocar em coisas desconhecidas.";
			close;
		}
	}
}